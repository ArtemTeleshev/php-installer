#!/usr/bin/env bash

NAME=$(basename $0)
SCRIPT=$(realpath $0)
SCRIPT_DIR=$(dirname $SCRIPT)

OS=$(uname -o)
AUTHOR="Artem Teleshev <artem.teleshev@gmail.com>"
VERSION="1.0"

SCRIPT_DIR_ETC=$SCRIPT_DIR/etc
VERSION_FILE=$SCRIPT_DIR_ETC/version
DOMAIN_FILE=$SCRIPT_DIR_ETC/domain
INSTALLATION_DIR=/usr/local/lib

PHP_NAME=php
PHP_VERSION=$(cat $VERSION_FILE)
PHP_FULL_NAME=$PHP_NAME-$PHP_VERSION
# If you wont to use PHP snaps:
# PHP_FULL_NAME=$PHP_NAME$PHP_VERSION

DIR=$INSTALLATION_DIR/$PHP_NAME$PHP_VERSION
DIR_SRC=$DIR/src

PHP_DIR=$DIR_SRC/$PHP_FULL_NAME
PHP_ARCHIVE_TYPE=tar.bz2
PHP_ARCHIVE_NAME=$PHP_FULL_NAME.$PHP_ARCHIVE_TYPE

DOWNLOAD_HOST=$(cat $DOMAIN_FILE)
DOWNLOAD_URL="http://$DOWNLOAD_HOST/distributions/$PHP_ARCHIVE_NAME"
# If you wont to use PHP snaps:
# DOWNLOAD_URL="http://snaps.php.net/php5.4-201312170830.tar.bz2"

PREFIX=$DIR
EPREFIX=$PREFIX

PHP=$EPREFIX/bin/php
PHPFPM=$EPREFIX/sbin/php-fpm

PECL=$EPREFIX/bin/pecl
PEAR=$EPREFIX/bin/pear
PHPIZE=$EPREFIX/bin/phpize
PHPCONFIG=$EPREFIX/bin/php-config

PHP_INI_DIR=$PREFIX/etc
EXTENSION_INI_DIR=$PHP_INI_DIR/php

if [ -f "$PHPCONFIG" ]; then
  EXTENSION_DIR=$($PHPCONFIG --extension-dir)
fi

if [ -f "$PEAR" ]; then
  PEAR_DOWNLOAD_DIR=$($PEAR config-get download_dir)
fi

function check_php_extension() { # {{{
  if [ -f $EXTENSION_PATH_TO_INI ] ; then
    echo "The '$EXTENSION_NAME' PHP extension is already installed in PHP $PHP_VERSION"
    echo -n "Reinstall '$EXTENSION_NAME' extension? (yes/[no]): "
    while read INPUTTED_CONFIRMATION
    do
      if [ "$INPUTTED_CONFIRMATION" = "yes" ] ; then
        echo -n "Started to delete '$EXTENSION_NAME' extension for PHP $PHP_VERSION ... "
        rm $EXTENSION_PATH_TO_INI || echo "[ Error ]" && echo "[ OK ]"

        if [ -f $EXTENSION_PATH_TO_SO ] ; then
          rm $EXTENSION_PATH_TO_SO
        fi;
      else
        echo "Cancel installation '$EXTENSION_NAME' extension for PHP $PHP_VERSION ... [ OK ]"
        exit 0
      fi
      break
    done
  fi;

  if [ ! -d $EXTENSION_INI_DIR ] ; then
    mkdir -p $EXTENSION_INI_DIR
  fi;
} # }}}

function install_php_pecl_extension() { # {{{
  EXTENSION_NAME=$1
  EXTENSION_VERSION=$2

  if [ $3 ]; then
    EXTENSION_TYPE=$3
  else
    EXTENSION_TYPE=extension
  fi;

  if [ $4 ]; then
    EXTENSION_DOWNLOAD_NAME=$4
  else
    EXTENSION_DOWNLOAD_NAME=$EXTENSION_NAME
  fi;

  EXTENSION_FULL_NAME=$EXTENSION_DOWNLOAD_NAME-$EXTENSION_VERSION
  EXTENSION_SOURCE=$DIR_SRC/$EXTENSION_FULL_NAME

  EXTENSION_SO=$EXTENSION_NAME.so
  EXTENSION_PATH_TO_SO=$EXTENSION_DIR/$EXTENSION_SO

  EXTENSION_PRIORITY=$(ls -l $EXTENSION_INI_DIR/ | grep ini | wc -l | awk '{ printf "%03d", $0 + 1 }')

  EXTENSION_INI=$EXTENSION_PRIORITY-$EXTENSION_NAME.ini
  EXTENSION_PATH_TO_INI=$EXTENSION_INI_DIR/$EXTENSION_INI

  check_php_extension

  cd $DIR_SRC && echo "Change current directory to '$DIR_SRC'" || exit 1

  echo "Try to downloaded: '$EXTENSION_DOWNLOAD_NAME'"
  $PECL download $EXTENSION_FULL_NAME || exit 2

  if [ -f $DIR_SRC/channel.xml ] ; then
    rm $DIR_SRC/channel.xml
  fi;
  
  echo "Start unzip: '$EXTENSION_ARCHIVE'"
  if [ -f $EXTENSION_SOURCE.tgz ]; then
    gzip -d < $EXTENSION_SOURCE.tgz | tar -xvf - || exit 3
  elif [ -f $EXTENSION_SOURCE.tar ]; then
    tar -xvf $EXTENSION_SOURCE.tar || exit 4
  else
    echo "Incorrect $EXTENSION_SOURCE file extension, allowed: tgz, tar"
    exit 5
  fi


  if [ -f $DIR_SRC/package.xml ] ; then
    rm $DIR_SRC/package.xml
  fi;

  cd $EXTENSION_SOURCE || exit 6 && echo "Change current directory to '$EXTENSION_SOURCE'"

  $PHPIZE || exit 7

  # configure
  ./configure --prefix=$PREFIX --exec-prefix=$EPREFIX --enable-$EXTENSION_NAME --enable-shared=PKGS --with-php-config=$PHPCONFIG || exit 8

  # install
  make install || exit 9 

  echo "$EXTENSION_TYPE=$EXTENSION_PATH_TO_SO" > $EXTENSION_PATH_TO_INI || exit 10 && echo "Save '$EXTENSION_TYPE=$EXTENSION_PATH_TO_SO' to '$EXTENSION_PATH_TO_INI'"
} # }}}

function create_symlink_to() { # {{{
  SYMLINK_NAME=$1
  SYMLINK_FROM=$2
  SYMLINK_TO=$3
  SYMLINK=$SYMLINK_FROM/$SYMLINK_NAME

  echo " "
  echo "Trying to create symlink '$SYMLINK' in $SYMLINK_TO";
  echo "-----"

  if [ -e $SYMLINK ] ; then
    if [ -d $SYMLINK_TO ] ; then
      echo -n " Trying to change current directory to: '$SYMLINK_TO' ... "
      cd $SYMLINK_TO || echo "[ Error ]" && echo "[ OK ]"

      if [ "$(pwd)" = "$SYMLINK_TO" ] ; then
        if [ -L $SYMLINK_NAME ] || [ -e $SYMLINK_NAME ] ; then
          echo -n " Trying to delete '$SYMLINK_NAME' ... "
          sudo rm $SYMLINK_NAME || echo "[ Error ]" && echo "[ OK ]"
        fi

        echo -n " Trying to create symlink to: '$SYMLINK' ... "
        sudo ln -s $SYMLINK || echo "[ Error ]" && echo "[ OK ]"
      else
        echo  " [ Error ] Can't change current directory to: '$SYMLINK_TO'"
      fi

    else
      echo  " [ Error ] Can't find directory: '$SYMLINK_TO'"
    fi
  else
    echo  " [ Error ] '$SYMLINK' doesn't exist"
  fi

  echo " "
} # }}}

